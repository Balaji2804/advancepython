In api.js baseUrl is not fetching "process.env.API_BASE_URL" and using the other value 'https://resiliency.build.com'. The issue is it's working for non-prod url. But prod url too it's redirecting to same non-prod url which is causing the issue. I want the code to use "process.env.API_BASE_URL". But Login.js is showing the prod-url correctly. Attaching both api.js and Login.js. Resolve the issue
Api.js

```
import axios from 'axios';

const api = axios.create({
baseURL: process.env.API_BASE_URL || 'https://resiliency.build.com',
    withCredentials: true,
});

// Example API request functions
export const login = () => api.get('/');
//export const getAdminData = () => api.get('/admin');
export const getOnboardData = () => api.get('/onboard');
export const getDashboardData = () => api.get('/dashboard');
//export const getBaseLayoutData = () => api.get('/base');
export const getPlatformsData = () => api.get('/failover/config');
export const getCacheData = () => api.get('/cache');
export default api;
```

Login.js
"import React, { useState, useEffect } from 'react'; import { useNavigate } from 'react-router-dom'; import '../Login.css'; // Import external CSS file import LoadingIcon from './Loading';  function Login({ onLogin }) {   const [error, setError] = useState(null);   const [authenticated, setAuthenticated] = useState(false);   const [loading, setLoading] = useState(true);   const navigate = useNavigate();    useEffect(() => {     const checkLoginStatus = async () => {       try {         const response = await fetch('/auth/profile', { credentials: 'include' });         if (response.ok) {           const data = await response.json();           onLogin(data.username);           setAuthenticated(true);           navigate('/dashboard');         } else {           setAuthenticated(false);         }       } catch (err) {         console.error('Error checking login status:', err);         setAuthenticated(false);       } finally {         setLoading(false);       }     };      checkLoginStatus();   }, [onLogin, navigate]);    const handleAzureLogin = async () => {     try {       setError(null);       window.location.href = '/auth/signin';     } catch (err) {       setError('An error occurred during login. Please try again.');       console.error('Login error:', err);     }   };    if (loading) {     return (       <div className="loading-container">         <div className="spinner"></div>       </div>     );   }    if (authenticated) {     return null;   }    return (     <div className="login-container">       <div className="background-animation">         <div className="shape shape1"></div>         <div className="shape shape2"></div>         <div className="shape shape3"></div>       </div>        <div className="login-card">         <h1 className="header">Resiliency Framework</h1>          {error && <div className="error-message">{error}</div>}          <p className="welcome-text">Welcome! Sign in to access your dashboard.</p>         <button className="login-button" onClick={handleAzureLogin}>           Sign in with Azure         </button>       </div>     </div>   ); }  export default Login;"

I'm using separate lambdas for both prod and non-prod. I'm using environment variables via API_BASE_URL . If I use REACT_API_BASE_url, will the issue get resolved.
