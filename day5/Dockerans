# Stage 1: Build stage with Node.js
FROM public.ecr.aws/lambda/python:3.9 AS build

# Install Node.js and npm
RUN curl -sL https://rpm.nodesource.com/setup_14.x | bash - && \
    yum install -y nodejs && \
    yum clean all && \
    rm -rf /var/cache/yum

# Set working directory
WORKDIR /var/task

# Copy only package.json and package-lock.json to leverage caching
COPY frontend/package*.json ./frontend/

# Install Node.js dependencies (this will be cached unless package.json changes)
WORKDIR /var/task/frontend
RUN npm install

# Copy the rest of the frontend code after dependencies are installed
COPY frontend/ ./ 

# Build the React application
RUN npm run build

# Stage 2: Final Lambda runtime image
FROM public.ecr.aws/lambda/python:3.9

# Copy the built frontend and backend from the build stage
COPY --from=build /var/task /var/task

# Set execute permissions for the backend script
RUN chmod +x /var/task/backend/run.py

# Set working directory for backend
WORKDIR /var/task/backend

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Command to run Lambda function
CMD ["backend.run.handler"]

